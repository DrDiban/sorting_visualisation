{"version":3,"sources":["Bar.js","BarQS.js","Header.js","Mergesort.js","Quicksort.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","props","old_value","new_value","bottom_value","top_value","bottom_color","top_color","React","createElement","className","style","height","concat","backgroundColor","type","full_value","full_color","Fragment","Header","margin","padding","border","min","max","id","value","cursorValueSpeed","background","cursor","onChange","handleCursorChange","disabled","sortingStatus","cursorValueArraySize","handleCursorChangeArraySize","color","sortingAlgo","onClick","setAlgo","marginRight","paddingLeft","merge","a","aux","lo","mid","hi","animation","mini_animation","k","i","j","push","position","sort","length","position_lo","old_value_lo","new_value_lo","position_j","old_value_j","new_value_j","console","log","v","exch","position_i","old_value_i","new_value_i","partition","swap","App","arrSize","setArrSize","useState","arr","setArr","generateRandomArr","setSortingAlgo","setSortingStatus","setCursorValueSpeed","setCursorValueArraySize","algorithmSpeed","generateRandomNumber","Math","floor","random","size","arr_gen","delay","ms","Promise","resolve","setTimeout","async","sortArrMergeSort","new_arr","Array","n","len","mergeSort","revert_to_new","flushSync","updatedArr","location","sortArrQuickSort","quickSort","cur_loc","swap_j_final_pos","swap_lo_final_pos","swap_j_final_new_value","swap_lo_final_new_value","bar","map","barQS","BarQS","algorithm","event","target","value_at_0","value_at_100","x","round","display","justifyContent","alignItems","flexDirection","gap","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2f93fe9e.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Bar(props) {\n\n    const old_value = props.old_value\n    const new_value = props.new_value\n    let bottom_value = 0\n    let top_value = 0\n    let bottom_color = 'grey'\n    let top_color = 'black'\n    if (old_value>new_value){\n        bottom_value = new_value\n        bottom_color = 'black'\n        top_value = old_value - new_value\n        top_color = 'grey'\n    }\n\n    else if (old_value<new_value){\n        bottom_value = old_value\n        top_value = new_value -old_value\n    }\n\n    else{\n        bottom_value = new_value\n        bottom_color = 'black'\n    }\n\n    return (\n        <div className=\"container\" >\n         <div className=\"bar-arr-2\"  style={{height: `${top_value}px`, backgroundColor: `${top_color}`}}></div>\n        <div className=\"bar-arr\" style={{height: `${bottom_value}px`, backgroundColor: `${bottom_color}`}}></div>\n       \n        </div>\n    )\n}","import React from \"react\"\n\nexport default function Bar(props) {\n\n    const old_value = props.old_value\n    const new_value = props.new_value\n    const type = props.type\n\n    let bottom_value = 0\n    let top_value = 0\n    let bottom_color = 'grey'\n    let top_color = 'black'\n    let full_value = old_value\n    let full_color = 'grey'\n    if (type===\"start_point\"){\n        full_value = old_value\n        full_color = 'red'\n    }\n\n    else if (type===\"i_pos_value_check\"){\n        full_value = old_value\n        full_color = 'yellow'\n    }\n\n    else if (type===\"j_pos_value_check\"){\n        full_value = old_value\n        full_color = 'yellow'\n    }\n\n    \n    else if (type===\"swap_position_i_j\" || type===\"swap_position_lo_j\" ){\n        if (old_value>new_value){\n            bottom_value = new_value\n            bottom_color = 'black'\n            top_value = old_value - new_value\n            top_color = 'grey'\n        }\n    \n        else if (old_value<new_value){\n            bottom_value = old_value\n            top_value = new_value -old_value\n        }\n    \n        else{\n            bottom_value = new_value\n            bottom_color = 'black'\n        }\n    }\n    else if (type===\"ordered\"){\n        full_value = new_value\n        full_color = 'black'\n    }\n\n    \n\n    return (\n        <div className=\"container\">\n            {(type === \"swap_position_i_j\" || type === \"swap_position_lo_j\") && (\n                <>\n                <div className=\"bar-arr-2\" style={{ height: `${top_value}px`, backgroundColor: `${top_color}` }}></div>\n                <div className=\"bar-arr\" style={{ height: `${bottom_value}px`, backgroundColor: `${bottom_color}` }}></div>\n                </>\n            )}\n\n            {type !== \"swap_position_i_j\" && type !== \"swap_position_lo_j\" && (\n                <div className=\"bar-arr\" style={{ height: `${full_value}px`, backgroundColor: `${full_color}` }}></div>\n            )}\n        </div>\n    )\n}","import React from 'react';\nimport './index.css';\n\n\n\n\nfunction Header(props) {\n    return (\n      <header style={{ backgroundColor: 'purple' , margin: -20, padding: \"0\", border:0}}>\n        <nav>\n          <ul className=\"header-ul\" >\n          <li className=\"header-ul-li-sortingspeed\">\n          <h1 className=\"header-ul-li-sortingspeed-h1\">Change Sorting Speed </h1>\n            \n            <input type=\"range\" min=\"0\" max=\"100\" id=\"changeSize\" \n            value = {props.cursorValueSpeed}\n            style={{ background: 'white', cursor: 'pointer' }}\n            onChange={props.handleCursorChange}\n            disabled={props.sortingStatus}  />\n          </li>\n          <li className=\"header-ul-li-arraysize\" >\n            <h1 className=\"header-ul-li-arraysize-h1\">Change Array Size</h1>\n            <input type=\"range\" min=\"0\" max=\"100\" id=\"changeSize\" \n            value = {props.cursorValueArraySize}\n            style={{ background: 'white', cursor: 'pointer' }}\n            onChange={props.handleCursorChangeArraySize}\n            disabled={props.sortingStatus}  />\n          </li>\n            \n            <div className=\"header-ul-container-algo\" >\n            <h1 className=\"header-ul-li-algo-h1\">Algorithm</h1>\n            <li className=\"header-ul-li-mergesort\" >\n              <button className=\"header-ul-li-mergesort-button\" \n              style={{color: props.sortingAlgo===\"MergeSort\"?\"white\":\"black\"}} \n              onClick={() => props.setAlgo(\"MergeSort\")}\n              disabled={props.sortingStatus}>MergeSort</button>\n            </li>\n            <li style={ {marginRight: 'auto', paddingLeft:10 }}>\n              <button className=\"header-ul-li-quicksort-button\" \n              style={{color: props.sortingAlgo===\"QuickSort\"?\"white\":\"black\"}} \n              onClick={() => props.setAlgo(\"QuickSort\")}\n              disabled={props.sortingStatus}>QuickSort</button>\n            </li>\n            </div>\n\n           \n          </ul>\n        </nav>\n      </header>\n    );\n  }\n\n  export default Header;","function merge(a, aux, lo, mid, hi, animation){\n    const mini_animation = []\n    // Copy value to auxiliary array\n    for (let k = lo; k <= hi; k++) {\n        aux[k] = a[k];\n    }\n    let i = lo\n    let j = mid+1;\n    \n    for (let k = lo; k <= hi; k++) {\n        if(i > mid){\n            mini_animation.push({\"position\":k, \"old_value\": a[k], \"new_value\":aux[j]})\n            a[k] = aux[j++]\n        }else if (j > hi)              \n        {\n            mini_animation.push({\"position\":k, \"old_value\": a[k], \"new_value\":aux[i]})\n            a[k] = aux[i++]\n        } else if (aux[j]<aux[i]) \n        {\n            mini_animation.push({\"position\":k, \"old_value\": a[k], \"new_value\":aux[j]})\n            a[k] = aux[j++]\n        }else   \n        {\n            mini_animation.push({\"position\":k, \"old_value\": a[k], \"new_value\":aux[i]})\n            a[k] = aux[i++]\n        }\n    } \n    animation.push(mini_animation)\n\n}\n\nexport function Mergesort(a){\n    const n = a.length\n    const animation = []\n    const aux = new Array(n);\n    let arr = new Array(n)\n    for (let i=0; i<n; i++){\n        arr[i] = a[i].old_value\n    }\n    console.log(\"start\")\n    console.log(arr)\n\n    \n    for (let len = 1; len < n; len *= 2) {\n        for (let lo = 0; lo < n-len; lo += len+len) {\n            const mid  = lo+len-1;\n            const hi = Math.min(lo+len+len-1, n-1);\n            merge(arr, aux, lo, mid, hi, animation);\n        }\n    }\n    console.log(\"completed\")\n    console.log(arr)\n    return animation\n\n}\n\n","function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nfunction sort(a, lo, hi, animation) {\n\n    if (hi <= lo) {\n\n        if (lo < a.length && lo>=0){\n        animation.push([{\"position\":lo, \"old_value\": a[lo], \"new_value\":0, \"type\":\"start_point\"},{\"position_lo\":lo, \"old_value_lo\": a[lo], \"new_value_lo\":a[lo], \"type\":\"swap_position_lo_j\",\n                             \"position_j\":lo, \"old_value_j\": a[lo], \"new_value_j\":a[lo]}])\n        }\n\n        return;\n\n    }\n    const j = partition(a, lo, hi, animation);\n\n    sort(a, lo, j - 1, animation);\n    sort(a, j + 1, hi, animation);\n  }\n\nfunction partition(a, lo, hi, animation) {\n    const mini_animation = []\n    console.log(\"lo\")\n    console.log(lo)\n    console.log(\"hi\")\n    console.log(hi)\n    mini_animation.push({\"position\":lo, \"old_value\": a[lo], \"new_value\":0, \"type\":\"start_point\"})\n    var i = lo+1;\n    var j = hi;\n    const v = a[lo];\n    while (true) {\n        // find item on lo to swap\n\n        while (a[i]< v) {\n            mini_animation.push({\"position\":i, \"old_value\": a[i], \"new_value\":0, \"type\":\"i_pos_value_check\"})\n            if (i === hi){ \n                break}\n            \n            i+=1\n        }\n        if (i >= lo+1 && i < j){\n        mini_animation.push({\"position\":i, \"old_value\": a[i], \"new_value\":0, \"type\":\"i_pos_value_check\"})\n        }\n\n        // find item on hi to swap\n        while (v < a[j]) {\n            mini_animation.push({\"position\":j, \"old_value\": a[j], \"new_value\":0, \"type\":\"j_pos_value_check\"})\n            if (j === lo) {break}      // redundant since a[lo] acts as sentinel\n            \n            j-=1\n        }\n        if (j > i && j <= hi){\n        mini_animation.push({\"position\":j, \"old_value\": a[j], \"new_value\":0, \"type\":\"j_pos_value_check\"})\n        }\n\n        // check if pointers cross\n        if (i >= j) {break}\n        console.log(a)\n        console.log(\"arrç\")\n        console.log(i,j)\n        a = exch(a, i, j);\n        mini_animation.push({\"position_i\":i, \"old_value_i\": a[i], \"new_value_i\":a[j], \"type\":\"swap_position_i_j\",\n                             \"position_j\":j, \"old_value_j\": a[j], \"new_value_j\":a[i],\n\n    \n    \n    })\n        i++\n        j--        \n        console.log(a)\n    }\n\n    // put partitioning item v at a[j]\n    a = exch(a, lo, j);\n    mini_animation.push({\"position_lo\":lo, \"old_value_lo\": a[lo], \"new_value_lo\":a[j], \"type\":\"swap_position_lo_j\",\n                             \"position_j\":j, \"old_value_j\": a[j], \"new_value_j\":a[lo]})\n\n    // now, a[lo .. j-1] <= a[j] <= a[j+1 .. hi]\n    animation.push(mini_animation)\n    console.log(\"lo\")\n    console.log(hi)\n    return j;\n}\n\nfunction exch(a,  i, j) {\n    const swap = a[i];\n    a[i] = a[j];\n    a[j] = swap;\n    return a\n}\n\n\nexport function Quicksort(a){\n    console.log(\"test\")\n    console.log(a)\n    const n = a.length\n    const animation = []\n    let arr = new Array(n)\n    for (let i=0; i<n; i++){\n        arr[i] = a[i].old_value\n    }\n    // arr = shuffleArray(arr)\n   \n   \n    sort(arr, 0, arr.length-1, animation) \n    console.log(\"completed\")\n    console.log(arr)\n    console.log(animation)\n\n    return animation\n}","import React from \"react\"\nimport { flushSync } from \"react-dom\"\nimport Bar from \"./Bar\"\nimport BarQS from \"./BarQS\"\nimport Header from \"./Header\"\n\nimport { Mergesort as mergeSort } from \"./Mergesort\"\nimport { Quicksort as quickSort } from \"./Quicksort\"\n// import {BarChart, Bar, Line} from 'recharts';\n\nfunction App() {\n  const min =  1\n  const max = 450\n \n\n  const [arrSize, setArrSize] = React.useState(10)\n  const [arr, setArr] = React.useState(generateRandomArr(min, max, arrSize))\n  const [sortingAlgo, setSortingAlgo] = React.useState(\"MergeSort\")\n  const [sortingStatus, setSortingStatus] = React.useState(false)\n  const [cursorValueSpeed, setCursorValueSpeed] = React.useState(0);\n  const [cursorValueArraySize, setCursorValueArraySize] = React.useState(0);\n\n\n\n  function interpolate(value_at_0, value_at_100, x) {\n    return Math.round(value_at_0 + (x / 100) * (value_at_100 - value_at_0));\n}\n  // For setting user algoritmn choice\n  function userSortingAlgo(algorithm){\n    setSortingAlgo(algorithm)\n  }\n\n  let algorithmSpeed = 600 * (100 - cursorValueSpeed)/100\n  function handleCursorChange(event){\n    // Update the cursorValue state when the user moves the cursor\n    setCursorValueSpeed(event.target.value);\n  };\n\n  function handleCursorChangeArraySize(event){\n  \n    setCursorValueArraySize(event.target.value);\n    setArrSize(interpolate(10, 65, event.target.value))\n    setArr(generateRandomArr(min, max, arrSize))\n\n  };\n\n\n  // For setting user algoritmn choice\n  function userSortingAlgo(algorithm){\n    setSortingAlgo(algorithm)\n  }\n\n  function generateRandomNumber(min,max){\n    let x = Math.floor((Math.random() * max) + min);\n    return x\n  }\n \n  function generateRandomArr(min, max, size){\n    const arr_gen = []\n    for (let i = 0; i < size; i++) {\n      arr_gen.push({\"old_value\":generateRandomNumber(min, max), \"new_value\":0, \"type\":\"normal\"})\n    }\n    return arr_gen\n  }\n\n \n  function resetArr(){\n    setArr(generateRandomArr(min, max, arrSize))\n  }\n\n  // quickSort(generateRandomArr(min, max, size))\n  const delay = ms => new Promise(\n    resolve => setTimeout(resolve, ms)\n  );\n  async function sortArrMergeSort(){\n    setSortingStatus(true)\n  \n    var new_arr = new Array(arr.length);\n    for (let i = 0; i <arr.length ; i++) {\n      new_arr[i] = arr[i]\n      }\n    let animation = []\n    animation = mergeSort(new_arr)\n    console.log(\"animation\")\n    console.log(animation)\n    \n    for (let i = 0; i < animation.length; i++) {\n      let revert_to_new = []\n      for (let j = 0; j < animation[i].length; j++) {\n        await delay(algorithmSpeed);\n        console.log(i, j);\n        \n        flushSync(()=>{\n          \n          const updatedArr = [...arr]; // Create a new array based on previous state\n    \n          // Modify the array based on animation[i][j]\n          \n          console.log(animation[i][j].location);\n          console.log(animation[i][j]);\n          console.log(animation[i][j].new_value);\n          \n          console.log(animation[i][j].new_value.new_value);\n          updatedArr[animation[i][j].position].old_value = animation[i][j].old_value;\n          updatedArr[animation[i][j].position].new_value = animation[i][j].new_value;\n          revert_to_new.push(animation[i][j].position)\n          setArr(updatedArr);          \n        })\n\n          // Return the updated state\n        ;\n      }\n      const updatedArr = [...arr]\n      await delay(algorithmSpeed);\n      for (let k = 0; k < revert_to_new.length; k++) {\n        \n        updatedArr[revert_to_new[k]].old_value = updatedArr[revert_to_new[k]].new_value \n        updatedArr[revert_to_new[k]].new_value = 0;\n        \n\n      }\n      setArr(updatedArr);\n\n    }\n    setSortingStatus(false)\n    \n    \n\n\n  }\n\n\n\n  async function sortArrQuickSort(){\n    setSortingStatus(true)\n  \n    var new_arr = new Array(arr.length);\n    for (let i = 0; i <arr.length ; i++) {\n      new_arr[i] = arr[i]\n      }\n    let animation = []\n    animation = quickSort(new_arr)\n    console.log(\"animation\")\n    console.log(animation)\n    \n    for (let i = 0; i < animation.length; i++) {\n      let revert_to_new = []\n      let cur_loc = animation[i][0].position\n      let swap_j_final_pos = 0\n      let swap_lo_final_pos = 0\n      let swap_j_final_new_value = 0\n      let swap_lo_final_new_value = 0\n      for (let j = 1; j < animation[i].length; j++) {\n        await delay(algorithmSpeed);\n        \n        flushSync(()=>{\n          \n          const updatedArr = [...arr]; // Create a new array based on previous state\n          // Modify the array based on animation[i][j]\n          if (animation[i][j].type===\"i_pos_value_check\"||animation[i][j].type===\"j_pos_value_check\" ){\n            updatedArr[animation[i][j].position].old_value = animation[i][j].old_value;\n            updatedArr[animation[i][j].position].new_value = animation[i][j].new_value;\n            updatedArr[animation[i][j].position].type = animation[i][j].type;\n            updatedArr[cur_loc].type = \"start_point\";\n\n            if (animation[i][j-1].type === animation[i][j].type ){\n              updatedArr[animation[i][j-1].position].type = \"normal\";\n            }\n\n          }\n           \n          else if (animation[i][j].type===\"swap_position_i_j\"||animation[i][j].type===\"swap_position_lo_j\" ){\n\n            if (animation[i][j-1].type===\"i_pos_value_check\"||animation[i][j-1].type===\"j_pos_value_check\" ){\n              updatedArr[animation[i][j-1].position].type = \"normal\";\n\n            }\n\n            if (animation[i][j].type===\"swap_position_i_j\"){\n              updatedArr[animation[i][j].position_i].old_value = animation[i][j].old_value_i;\n              updatedArr[animation[i][j].position_i].new_value = animation[i][j].new_value_i;\n              updatedArr[animation[i][j].position_i].type = animation[i][j].type;\n\n              updatedArr[animation[i][j].position_j].old_value = animation[i][j].old_value_j;\n              updatedArr[animation[i][j].position_j].new_value = animation[i][j].new_value_j;\n              updatedArr[animation[i][j].position_j].type = animation[i][j].type;\n            }\n\n            \n            else if (animation[i][j].type===\"swap_position_lo_j\"){\n              updatedArr[animation[i][j].position_lo].old_value = animation[i][j].old_value_lo;\n              updatedArr[animation[i][j].position_lo].new_value = animation[i][j].new_value_lo;\n              updatedArr[animation[i][j].position_lo].type = animation[i][j].type;\n\n              updatedArr[animation[i][j].position_j].old_value = animation[i][j].old_value_j;\n              updatedArr[animation[i][j].position_j].new_value = animation[i][j].new_value_j;\n              updatedArr[animation[i][j].position_j].type = animation[i][j].type;\n\n              swap_j_final_pos = animation[i][j].position_j\n              swap_j_final_new_value = animation[i][j].new_value_j\n              swap_lo_final_pos = animation[i][j].position_lo\n              swap_lo_final_new_value = animation[i][j].new_value_lo\n            }\n          }\n\n          if (animation[i][j-1].type===\"swap_position_i_j\"){\n            updatedArr[animation[i][j-1].position_i].type = \"normal\";\n            updatedArr[animation[i][j-1].position_j].type = \"normal\";\n          }\n\n          \n          setArr(updatedArr);          \n        })\n\n          // Return the updated state\n        ;\n      }\n      const updatedArr = [...arr]\n      await delay(algorithmSpeed);\n      \n      updatedArr[swap_lo_final_pos].type = \"normal\"\n      updatedArr[swap_lo_final_pos].old_value = swap_j_final_new_value\n      updatedArr[swap_lo_final_pos].new_value = swap_j_final_new_value \n\n      updatedArr[swap_j_final_pos].type = \"ordered\"\n      updatedArr[swap_j_final_pos].old_value = swap_lo_final_new_value \n      updatedArr[swap_j_final_pos].new_value = swap_lo_final_new_value\n      \n      setArr(updatedArr);\n\n    }\n      const updatedArr = [...arr]\n      for (let i = 0; i < updatedArr.length; i++) {\n        updatedArr[i].type = \"normal\"\n        updatedArr[i].new_value = 0\n      }\n      setSortingStatus(false)\n\n  }\n\n  const bar = arr.map(height => {\n    return <Bar \n    old_value={height.old_value}\n    new_value={height.new_value}\n    \n    />})\n\n  \n  const barQS = arr.map(height => {\n      return <BarQS \n      old_value={height.old_value}\n      new_value={height.new_value}\n      type = {height.type}\n      \n      />})\n    \n\n  return (\n    <div className=\"App\">\n      \n      \n      <div style={{margin: 0, padding:0 }}>\n      <Header setAlgo={userSortingAlgo} sortingAlgo = {sortingAlgo} sortingStatus={sortingStatus} \n      handleCursorChange = {handleCursorChange} cursorValueSpeed = {cursorValueSpeed}\n      handleCursorChangeArraySize = {handleCursorChangeArraySize} cursorValueArraySize = {cursorValueArraySize}/>\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'row', height: '500px', position: 'relative' }}>\n      \n      <h1 >\n      {sortingAlgo === \"MergeSort\" ?  bar : barQS}\n       </h1>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      {!sortingStatus &&\n      <div style={{  display: 'flex', gap: '10px' }}>\n        <button className=\"app-button-reset\" onClick = {resetArr}>Reset</button>\n        <button className=\"app-button-sort\" onClick={sortingAlgo === \"MergeSort\" ? () => sortArrMergeSort():() => sortArrQuickSort()}>Sort</button>\n        </div>\n      }\n\n    {sortingStatus &&\n      <>\n      <h1>Sorting In Progress</h1>\n        </>\n      } \n        </div>\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}